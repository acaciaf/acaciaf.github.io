<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SSH私钥泄露</title>
      <link href="/2022/03/31/SSH%E7%A7%81%E9%92%A5%E6%B3%84%E9%9C%B2/"/>
      <url>/2022/03/31/SSH%E7%A7%81%E9%92%A5%E6%B3%84%E9%9C%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="SSH私钥泄露"><a href="#SSH私钥泄露" class="headerlink" title="SSH私钥泄露"></a>SSH私钥泄露</h2><h3 id="1-环境搭建"><a href="#1-环境搭建" class="headerlink" title="1.环境搭建"></a>1.环境搭建</h3><ul><li>下载到ssh-私钥泄露靶机，没办法登录，也没有办法获取ip</li></ul><p><img src="https://s2.loli.net/2022/03/31/YZ9Q8AJoKHerntF.png" alt="image-20220331114528941"></p><h3 id="2-靶机寻找"><a href="#2-靶机寻找" class="headerlink" title="2.靶机寻找"></a>2.靶机寻找</h3><p>kali登入，ifconfig查看ip</p><p><img src="https://s2.loli.net/2022/03/31/irhx5sHFkTuBwy6.png" alt="image-20220331113653673"></p><p>然后使用netdiscover，探测同网段ip地址，找到靶机的地址<img src="https://s2.loli.net/2022/03/31/wg3yGpsWDf4bVOX.png" alt="image-20220331113851379"></p><p><img src="https://s2.loli.net/2022/03/31/gwztFNVBJMolT1O.png" alt="image-20220331114102074"></p><p>ping测试连通行</p><p><img src="https://s2.loli.net/2022/03/31/FUMRB18Jph3s4aQ.png" alt="image-20220331143739666"></p><h4 id="信息探测"><a href="#信息探测" class="headerlink" title="信息探测"></a>信息探测</h4><p><img src="https://s2.loli.net/2022/03/31/Rg3dnwtfYXz7kaZ.png" alt="image-20220331114930301"></p><p>l.nmap扫描发现开着三个服务，ssh是我们要工具的服务端口，31337是特殊端口，针对特殊端口进行探测。</p><p>2.打开浏览器，输入IP+端口，我这里是192.168.2.151:31337</p><p><img src="https://s2.loli.net/2022/03/31/r28IZwWYGENgoTl.png" alt="image-20220331144531042"></p><p>发先并没有任何收获，那么我们就扫描目录，探测隐藏文件，我这里用的dirb来探测，输入dirb <a href="http://192.168.2.151:31337/">http://192.168.2.151:31337/</a></p><p><img src="https://s2.loli.net/2022/03/31/IKmijLA5PryVncq.png" alt="image-20220331144859967"></p><p>这里检查后发现两个对我们有用的敏感文件</p><ul><li><a href="http://192.168.2.151:31337/.ssh">http://192.168.2.151:31337/.ssh</a></li><li><a href="http://192.168.2.151:31337/.robots.txt">http://192.168.2.151:31337/.robots.txt</a></li></ul><p>我们先看robost.txt这个是为了防止爬虫爬取设置的禁止访问的文件</p><p><img src="https://s2.loli.net/2022/03/31/se6IGSUvtmE8HYV.png" alt="image-20220331145331312"></p><p>发现下面有三个目录，访问taxes，得到第一个flag，经过排查其他两个没有任何价值了</p><p><img src="https://s2.loli.net/2022/03/31/U34whyrN2gvGbqH.png" alt="image-20220331145608967"></p><h3 id="SSH私钥泄露-1"><a href="#SSH私钥泄露-1" class="headerlink" title="SSH私钥泄露"></a>SSH私钥泄露</h3><p>然后我们打开第二个敏感文件.ssh</p><p><img src="https://s2.loli.net/2022/03/31/rQYGIuoAjbLmPBF.png" alt="image-20220331145919939"></p><p>尝试目录下是否存在私钥和认证关键字文件，访问后发现存在，下载</p><p><img src="https://s2.loli.net/2022/03/31/tOsTPyY7ZIk6duv.png" alt="image-20220331150116927"></p><p><img src="https://s2.loli.net/2022/03/31/gRFDXnGl39jt8vO.png" alt="image-20220331150150248"></p><p><img src="https://s2.loli.net/2022/03/31/1MpLVbcX4HOyo5f.png" alt="image-20220331150342303"></p><p>接下来我们先切换到私钥文件目录下，对私钥进行赋读写权限，ls-alh查看权限，chmod 600 文件名</p><p><img src="https://s2.loli.net/2022/03/31/1A2glMeojkSX4t8.png" alt="image-20220331150828957"></p><p>查看认证关键字(authorized_keys)中发现了用户simon</p><p><img src="https://s2.loli.net/2022/03/31/5YiEoJswdebA1yK.png" alt="image-20220331151142532"></p><p>有了私钥和用户名，我们就可以尝试使用ssh命令对靶机进行远程登录</p><p><img src="https://s2.loli.net/2022/03/31/CHexDAydpa7iFkU.png" alt="image-20220331151511745"></p><p>登录，发现需要登录密码</p><h3 id="SSH私钥破解"><a href="#SSH私钥破解" class="headerlink" title="SSH私钥破解"></a>SSH私钥破解</h3><p>我们对私钥信息进行破解</p><p>首先使用ssh2john将id_isa密钥信息转换成john可识别的信息</p><p><img src="https://s2.loli.net/2022/03/31/Ht8mjbu3OKdl6wC.png" alt="img"></p><p><img src="https://s2.loli.net/2022/03/31/Cm6ulKDin7YQ4wJ.png" alt="img"></p><p>然后利用John进行逐步解密</p><p><img src="https://s2.loli.net/2022/03/31/NW1SMDdOAu8rJjU.png" alt="image-20220331154744196"></p><p>注意john工具对于同一个rsacrack文件只会进行一次爆破，如果第二次执行john rsacrack是不会得到结果的。</p><p>如果想查看上一次爆破的结果，可以使用以下命令</p><p>john –show rsacrack</p><p>发现一条密码记录：starwars 输入密码登录，登录成功</p><p><img src="https://s2.loli.net/2022/03/31/wvLqYWkGdneuFzS.png" alt="image-20220331154444607"></p><h3 id="靶机提权"><a href="#靶机提权" class="headerlink" title="靶机提权"></a>靶机提权</h3><p>登录成功后，进入root目录。</p><p>ls后发现目录下有:flag.txt,但是没有权限打开，说明我们现在不是root权限，需要获取。</p><p><img src="https://s2.loli.net/2022/03/31/USF3nKzA4iaGxkt.png" alt="image-20220331155102386"></p><p>我们通过find &#x2F; -perm -400 2&gt;&#x2F;dev&#x2F;null 查看我们能执行的文件</p><p>这里find &#x2F; -perm -4000是查看能够执行的文件2&gt;&#x2F;dev&#x2F;null是将错误信息重定向到null文件中后执行发现可执行文件中有一个文件存在root目录下find</p><p><img src="https://s2.loli.net/2022/03/31/gSoVNXwz5Y3LdnU.png" alt="image-20220331155602189"></p><p>cat read_message.c查看源码，得到第二个flag</p><p><img src="https://s2.loli.net/2022/03/31/MfI5NFEVmLAbyXC.png" alt="image-20220331155748746"></p><p>这是一个pwn的题，原理就是因为gets（buf）没有限制读取的长度，但是buf[]这个数组只能储存20个字符，那么超过20个字符的就会存入缓冲区，将后面的内容覆盖。</p><p>然后当执行到execve的时候原来要执行program[]内的字符，被覆盖就可以利用了。</p><p>所以只要输入SimonAAAAAAAAAAAAAAA&#x2F;bin&#x2F;sh,即可进入root的shell</p><p><img src="https://s2.loli.net/2022/03/31/sPEOt2IlKrpodjN.png" alt="image-20220331160619393"></p><p>就得到了root权限啦，然后cat.flag.txt就能得到第三个flag了。</p><p><img src="https://s2.loli.net/2022/03/31/AdB4IFzkUWqrZVy.png" alt="image-20220331160726480"></p><p>实验完成。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/03/10/hello-world/"/>
      <url>/2022/03/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
